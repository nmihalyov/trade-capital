*,:after,:before{box-sizing:border-box}:after,:before{text-decoration:inherit;vertical-align:inherit}html{cursor:default;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-tap-highlight-color:transparent;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;word-break:break-word}body{margin:0}h1{font-size:2em;margin:.67em 0}dl dl,dl ol,dl ul,ol dl,ol ol,ol ul,ul dl,ul ol,ul ul{margin:0}hr{height:0;overflow:visible}main{display:block}nav ol,nav ul{list-style:none;padding:0}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}audio,canvas,iframe,img,svg,video{vertical-align:middle}audio,video{display:inline-block}audio:not([controls]){display:none;height:0}iframe,img{border-style:none}svg:not([fill]){fill:currentColor}svg:not(:root){overflow:hidden}table{border-collapse:collapse}button,input,select{margin:0}button{overflow:visible;text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}fieldset{border:1px solid #a0a0a0;padding:.35em .75em .625em}input{overflow:visible}legend{color:inherit;display:table;max-width:100%;white-space:normal}progress{display:inline-block;vertical-align:baseline}select{text-transform:none}textarea{margin:0;overflow:auto;resize:vertical}[type=checkbox],[type=radio]{padding:0}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-inner-spin-button,::-webkit-outer-spin-button{height:auto}::-webkit-input-placeholder{color:inherit;opacity:.54}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}::-moz-focus-inner{border-style:none;padding:0}:-moz-focusring{outline:1px dotted ButtonText}:-moz-ui-invalid{box-shadow:none}details,dialog{display:block}dialog{background-color:#fff;border:solid;color:#000;height:-moz-fit-content;height:-webkit-fit-content;height:fit-content;left:0;margin:auto;padding:1em;position:absolute;right:0;width:-moz-fit-content;width:-webkit-fit-content;width:fit-content}dialog:not([open]){display:none}summary{display:list-item}canvas{display:inline-block}template{display:none}[tabindex],a,area,button,input,label,select,summary,textarea{-ms-touch-action:manipulation;touch-action:manipulation}[hidden]{display:none}[aria-busy=true]{cursor:progress}[aria-controls]{cursor:pointer}[aria-disabled=true],[disabled]{cursor:not-allowed}[aria-hidden=false][hidden]{display:initial}[aria-hidden=false][hidden]:not(:focus){clip:rect(0,0,0,0);position:absolute}button,input,select,textarea{background-color:transparent;border:1px solid WindowFrame;color:inherit;font:inherit;letter-spacing:inherit;padding:.25em .375em}select{-moz-appearance:none;-webkit-appearance:none;background:no-repeat 100%/1em;border-radius:0;padding-right:1em}select:not([multiple]):not([size]){background-image:url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='4'%3E%3Cpath d='M4 0h6L7 4'/%3E%3C/svg%3E")}::-ms-expand{display:none}:-ms-input-placeholder{color:rgba(0,0,0,.54)}@font-face{font-family:Montserrat;src:url(../fonts/Montserrat/Montserrat-ExtraLight.ttf) format("truetype");font-weight:100;font-style:normal}@font-face{font-family:Montserrat;src:url(../fonts/Montserrat/Montserrat-Regular.ttf) format("truetype");font-weight:300;font-style:normal}@font-face{font-family:Montserrat;src:url(../fonts/Montserrat/Montserrat-Medium.ttf) format("truetype");font-weight:500;font-style:normal}@font-face{font-family:Montserrat;src:url(../fonts/Montserrat/Montserrat-SemiBold.ttf) format("truetype");font-weight:700;font-style:normal}@font-face{font-family:Montserrat;src:url(../fonts/Montserrat/Montserrat-Bold.ttf) format("truetype");font-weight:900;font-style:normal}body{padding-top:80px;color:#fff;background-image:url(../../img/background.png);background-attachment:fixed;background-position:50%;background-size:cover;background-repeat:no-repeat;font-family:Montserrat,Helvetica,sans-serif;font-size:20px;font-weight:300}h1,h2,h3,h4,h5,h6,p{margin:0}.container{width:100%}.container .wrapper{max-width:1200px;width:100%;margin:0 auto;padding:0 15px}.button{display:block;width:270px;height:50px;color:#fff;line-height:50px;text-align:center;text-decoration:none;border-radius:10px;transition:all .3s ease-in-out;font-size:16px;font-weight:500}.button--outline{border:2px solid #0090ff}.button--outline:hover{background-color:#0090ff}.button--outline:hover:active{background-color:#0065b3;border-color:#0065b3;transition:none}.button--filled{background-color:#0090ff}.button--filled:hover{background-color:#0079d6}.button--filled:hover:active{background-color:#0065b3;transition:none}.heading{line-height:1.2em;color:#fff;font-size:50px;font-weight:900}.heading--reverse,.heading span{color:#0090ff}.heading--reverse span{color:#fff}.video{position:relative;overflow:hidden;border-radius:10px}.video__cover{position:absolute;top:0;left:0;display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center;width:100%;height:100%;cursor:pointer;background-size:cover;background-position:50%;background-repeat:no-repeat}.video:hover .video__play:after{transform:scale(1.15)}.video:hover .video__play:before{transform:scale(1.05)}.video__play{position:relative;width:120px;height:120px;display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.video__play:after,.video__play:before{position:absolute;content:"";display:block;border-radius:50%;background-color:#0090ff;transition:all .3s ease-in-out}.video__play:before{z-index:1;top:0;left:0;width:100%;height:100%;opacity:.5}.video__play:after{z-index:2;top:calc(50% - 45px);left:calc(50% - 45px);width:90px;height:90px}.video__play svg{z-index:3;margin-left:4px}.header{z-index:4;position:fixed;top:0;left:0;padding:15px 0;background-color:#272c3a}.header__menu{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.header__link,.header__nav{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:center;justify-content:center;-ms-flex-align:center;align-items:center}.header__link{height:45px;margin:0 35px;color:#fff;text-decoration:none;transition:all .3s ease-in-out;font-size:18px;font-weight:500}.header__link:hover{color:#0090ff}.header__link:hover:active{color:#0065b3;transition:none}.header__link--current{pointer-events:none;border-bottom:4px solid #0090ff}.hero{padding:100px 0 50px}.hero__grid{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:stretch;align-items:stretch}.hero__block{width:570px}.hero__desc{margin:20px 0 25px;padding-right:20px;color:#dadae6;line-height:1.65em;font-weight:300}.hero__buttons{-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-align:center;align-items:center}.hero__buttons,.hero__video{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.hero__video{-ms-flex-flow:column nowrap;flex-flow:column nowrap;-ms-flex-align:start;align-items:flex-start;height:100%}.hero__video-desc{line-height:1.65em;font-size:24px;font-weight:300}.why{padding:50px 0 40px}.why__main{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;margin-bottom:60px}.why__main-col{width:570px}.why__highlight{padding:30px 20px;border-radius:10px;background-color:#272c3a}.why__highlight-header{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center;margin-bottom:20px}.why__highlight-icon{width:70px;height:70px;margin-right:30px;background-image:url(../../img/icons/sandclock.svg);background-size:contain;background-position:50%;background-repeat:no-repeat}.why__highlight-heading{font-size:24px;font-weight:700}.why__highlight-desc{color:#dadae6;line-height:1.65em}.why__sub{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:start;align-items:flex-start}.why__sub-col{width:370px}.why__sub-header{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:start;justify-content:flex-start;-ms-flex-align:center;align-items:center;margin-bottom:20px}.why__sub-icon{-ms-flex-negative:0;flex-shrink:0;width:70px;height:70px;margin-right:30px;background-size:contain;background-position:50%;background-repeat:no-repeat}.why__sub-icon[data-icon=money]{background-image:url(../../img/icons/money.svg)}.why__sub-icon[data-icon=timer]{background-image:url(../../img/icons/timer.svg)}.why__sub-icon[data-icon=robot]{background-image:url(../../img/icons/robot.svg)}.why__sub-heading{padding-right:30px;font-size:24px;font-weight:700}.why__sub-desc{color:#dadae6;font-size:16px;line-height:1.65em}.demo{padding:40px 0 50px}.demo__block{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:start;align-items:flex-start}.demo__col{width:570px}.demo__heading{margin-bottom:30px}.demo__desc{color:#dadae6;line-height:1.65em}.calc{padding:50px 0 100px}.calc__main{display:-ms-flexbox;display:flex;flex-flpw:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:start;align-items:flex-start;margin-bottom:30px}.calc__main-info{width:370px}.calc__main-desc{color:#dadae6;line-height:1.65em}.calc__heading{margin-bottom:20px}.calc__stats{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.calc__stats-col{width:370px;padding:20px 20px 40px;border-radius:10px;background-color:#272c3a;box-shadow:0 16px 48px rgba(17,45,71,.1)}.calc__stats-head{margin-bottom:20px;color:#0090ff;text-align:center;line-height:50px;font-size:50px;font-weight:900}.calc__stats-text{color:#dadae6;text-align:center;line-height:1.65em}.note{padding:30px 0;background-color:#272c3a}.note__block{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center;padding:0 45px}.note__text{font-size:30px;font-weight:900}.feedback{padding:50px 0}.feedback__heading{margin-bottom:60px;text-align:center}.feedback__row{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:center;align-items:center}.feedback__row:not(:last-child){margin-bottom:60px}.feedback__video{width:370px;height:285px}.feedback__video iframe{width:100%;height:100%}.footer{background-color:#272c3a;padding:85px 0}.footer__block{display:-ms-flexbox;display:flex;-ms-flex-flow:row nowrap;flex-flow:row nowrap;-ms-flex-pack:justify;justify-content:space-between;-ms-flex-align:start;align-items:flex-start}.footer__logo{width:170px;height:92px}.footer__info{padding:0 30px}.footer__text{color:#dadae6;text-align:justify}.footer__link,.footer__text{line-height:1.65em;font-size:13px}.footer__link{color:#0090ff;text-decoration:none;transition:all .3s ease-in-out}.footer__link:hover{color:#0079d6}.footer__link:hover:active{color:#0065b3;transition:none}.footer__copyright{width:170px;height:100px}@media only screen and (max-width:1199px){body{font-size:16px}.container .wrapper{max-width:768px;padding:0 20px}}@media only screen and (max-width:767px){body{font-size:14px}.container .wrapper{max-width:320px;padding:0 10px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
